user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    #include /etc/nginx/conf.d/*.conf;

    # Docker
    server {
        server_name docker.tuyenntk.com;
        listen 443 ssl http2;

        ssl_certificate /etc/pki/tls/certs/bundle.crt;
        ssl_certificate_key /etc/pki/tls/private/private.key;

        location / {
            proxy_pass http://localhost:5000;
            proxy_connect_timeout       3000;
            proxy_send_timeout          3000;
            proxy_read_timeout          3000;
            send_timeout                3000;
            client_max_body_size        2000M;
        }
    }

    # API
    server {
        server_name api.tuyenntk.com;
        listen 80;

        location /swagger {
            proxy_pass        http://localhost:8081;
            proxy_set_header  Host api.tuyenntk.com;
            proxy_set_header  X-Forwarded-Proto $scheme;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        server_name api.tuyenntk.com;
        listen 443 ssl http2;

        ssl_certificate /etc/pki/tls/certs/bundle.crt;
        ssl_certificate_key /etc/pki/tls/private/private.key;

        location / {
            proxy_pass        http://localhost:4031;
            proxy_set_header  Host $host;
            proxy_set_header  X-Real-IP $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;
        }
    }

}
